#
# @file Makefile
#
# @section desc File description
#
# Makefile for application test
# automatically generated by goil on Fri Feb 12 14:35:51 2016
# from root OIL file autosar_tp_s1.oil
#
# @section copyright Copyright
#
# Trampoline OS
#
# Trampoline is copyright (c) IRCCyN 2005-2012
# Trampoline is protected by the French intellectual property law.
#
# This software is distributed under the Lesser GNU Public Licence
#
# @section infos File informations
#
# Do not modify directly this file, it can be overwritten by goil
# Instead, you can update your .oil file description.
#
# $Date$
# $Rev$
# $Author$
# $URL$
#
# make          : build application test
# make doc      : extract both dev and user docs from trampoline sources 
#                 (doxygen and dot required).
# make clean    : remove everything except the Makefile.
# 
# NOTE: dependancies are set by default (to recompile the needed files)
#       if your compiler does not support it (-MF -MD) you can turn it off:
#       use the NODEP symbol, i.e. : make clean NODEP=1
#

#############################################################################
# USER APPLICATION CONFIGURATION
#############################################################################

# Name of the generated executable
# it should be declared as APP_NAME in the OS section of the .oil file.
# if not, it defaults to 'trampoline'
EXEC = autosar_tp_s1_exe

# Name of the source OIL file
OIL_FILE = autosar_tp_s1.oil

# Source files of the application.
# it should be declared as APP_SRC in the OS section of the .oil file
# (many times allowed).
SOURCES = autosar_tp_s1.c task1_instance1.c task1_instance2.c task1_instance3.c task2_instance.c task3_instance.c task4_instance.c protection_instance1.c protection_instance2.c

OIL_GENERATED_FILES += tpl_os.c

WITH_IOC = false

# Trampoline generation flags
WITH_TRACE = false
WITH_MEMMAP = false
WITH_LINKSCRIPT = false
WITH_MEMORY_PROTECTION = false


# CFLAGS: flags used for the C compilation process
# it should be declared as CFLAGS in the OS section of the .oil file
# (many times allowed).
override CFLAGS += -I/home/user/trampoline/tests/embUnit -Wall -pedantic -std=c99 -Wmissing-field-initializers


# LDFLAGS: flags used for the link process
# it should be declared as LDFLAGS in the OS section of the .oil file
# (many times allowed).
LDFLAGS = -L/home/user/trampoline/tests/lib -lembUnit


# ASFLAGS: flags used for the assembly process (if required)
# it should be declared as AS_FLAGS in the OS section of the .oil file
# (many times allowed).

# Default build directory
BUILD_DIR = build

# Autosar extension
# If 'true', Autosar extension are compiled in (schedule tables, ...)
AUTOSAR = true
AUTOSAR_SC = 2
AUTOSAR_OSAPPLICATIONS = false

# Scheduler
SCHEDULER = osek

#############################################################################
# COMPILER CONFIGURATION
#############################################################################
# Program used to compile files.
# it should be declared as COMPILER in the OS section of the .oil file.
# default is 'gcc'
CC = gcc

# Program used to link files during compilation process.
# it should be declared as LINKER in the OS section of the .oil file.
# default is 'ld'
LD = gcc

# Program used to link files during compilation process.
# it should be declared as ASSEMBLER in the OS section of the .oil file.
# default is 'gcc'
AS = gcc

#############################################################################
# TRAMPOLINE CONFIGURATION
#############################################################################

# Trampoline root path to source code.
# it should be declared as TRAMPOLINE_BASE_PATH
# in the OS section of the .oil file.
TPL_BASE_PATH = /home/user/trampoline

# Target is given in goil command line when generating the Makefile. 
# If you update the target here, it will be taken into account, and 
# a new Makefile will be generated with the new target.
TARGET = cortex/armv7/stm32f407
ARCH = cortex
CHIP = armv7
BOARD = stm32f407
MACHINE_INCLUDE_PATH = -I/home/user/trampoline/machines/cortex -I/home/user/trampoline/machines/cortex/armv7 -I/home/user/trampoline/machines/cortex/armv7/stm32f407
MACHINE_INCLUDE_MAKEFILE = /home/user/trampoline/machines/cortex/Makefile /home/user/trampoline/machines/cortex/armv7/Makefile /home/user/trampoline/machines/cortex/armv7/stm32f407/Makefile
MACHINE_ALL_PATHS = /home/user/trampoline/machines/cortex /home/user/trampoline/machines/cortex/armv7 /home/user/trampoline/machines/cortex/armv7/stm32f407

# WITH_USECOM is true if COM is used
WITH_USECOM = false

# WITH_USEDEBUG is true if DEBUG is used
WITH_USEDEBUG = false

# WITH_SYSTEM_CALL is true when compiling trampoline
# with system call support. It is false otherwise
WITH_SYSTEM_CALL = false

#############################################################################
# OIL COMPILER CONFIGURATION
#############################################################################
# Goil OIL compiler tool configuration.
# If the GOIL_TEMPLATE_PATH is commented, the default template path is used
# (it can be saved in the .profile file).
GOIL_COMPILER = goil
GOIL_TEMPLATE_PATH = /home/lmg/trampoline/goil/templates

#############################################################################
# DOCUMENTATION GENERATION
#############################################################################
# The doxygen tool is used to extract both user and developpment 
# documentation from the source code. 
# See http://www.stack.nl/~dimitri/doxygen/
# You should also install Graphviz dot tool to build dependancy graph in
# the documentation:
# see http://www.graphviz.org/
DOXYGEN = doxygen

#############################################################################
# TARGET SPECIFIC STUFF
#############################################################################

OIL_GENERATED_FILES += tpl_first_stage_irq.S
OIL_GENERATED_FILES += tpl_second_stage_irq.S
OIL_GENERATED_FILES += tpl_vectors.c

LIBRARY_PATH = $(BOARD_PATH)/StdPeriph_Driver/src

TEMP_SOURCE_DIRS += $(LIBRARY_PATH)

# File format transformation
OBJCOPY = objcopy
DOWNLOAD = st-flash

# Build binary files
img: $(EXEC)
	$(OBJCOPY) -O ihex $(EXEC) $(EXEC).hex
	$(OBJCOPY) -O binary $(EXEC) $(EXEC).bin

# Flash the STM32F4
burn: $(EXEC).bin
	$(DOWNLOAD) write $(EXEC).bin 0x8000000

EXTRA_FILES_CLEAN += $(EXEC).hex
EXTRA_FILES_CLEAN += $(EXEC).bin


#############################################################################
# KERNEL FILE LIST
#############################################################################

SOURCES += tpl_os_kernel.c
SOURCES += tpl_os_timeobj_kernel.c
SOURCES += tpl_os_action.c
SOURCES += tpl_os_error.c
SOURCES += tpl_as_action.c
SOURCES += tpl_as_timing_protec.c tpl_as_protec_hook.c
SOURCES += tpl_control.c
#############################################################################
# SYSTEM CALL FILE LIST
#############################################################################

SOURCES += tpl_os_os_kernel.c
SOURCES += tpl_os_os.c
SOURCES += tpl_os_interrupt_kernel.c
SOURCES += tpl_os_task_kernel.c
SOURCES += tpl_os_resource_kernel.c
SOURCES += tpl_as_counter_kernel.c
SOURCES += tpl_as_st_kernel.c
SOURCES += tpl_as_isr_kernel.c
SOURCES += tpl_as_gt_kernel.c

#############################################################################
# call Trampoline makefile rules.
#############################################################################

# Call main Trampoline Makefile
OS_MAKE_PATH = $(TPL_BASE_PATH)/make
include $(OS_MAKE_PATH)/Makefile

# vim:ft=make
